//
//  main.cpp
/*
冒泡排序
 作用：最常用的排序算法，对数组元素进行排序
 1.比较相邻的元素。如果第一个比第二个大，就交换他们两个
 2.对每一个相邻的元素做同样的工作，执行完毕后，找到一个最大值
 3.重复以上步骤，每次比较步骤-1，直到不需要比较
 *///升序排列
// 4 2 8 0 5 7 1 3 9   对比8次
//2 0 4 5 11 3 7 8     对比7次
//0 2 4 1 3 5 7。       对比6次
//0 2 1 3 4 5。         对比5次
//0 1 2 3 4            对比4次
//0 1 2 3
//0 1 2
//0 1
/*
 排序总轮数=元素个数-1
 每轮对比次数=元素个数-排序轮数-1
 */
#include<iostream>
using namespace std;

int main()
{
    //利用冒泡排序升序排列
    int arr[9]={4,2,8,0,5,7,1,3,9};
    cout<<"排序前："<<endl;
    for(int i= 0;i<9;i++)
    {
        cout<<arr[i]<<" ";
    }

    cout<<endl;

    //开始冒泡排序
    //排序总轮数=元素个数-1
    for(int i=0;i<9-1;i++)
    {
        //内层循环
        // 每轮对比次数=元素个数-排序轮数-1
        for (int j=0;j<9-i-1;j++ )
        {
            if(arr[j]>arr[j+i])
            {
                int temp = arr[j];
                arr[j] = arr[i+j];
                arr[i+j] = temp;
                
            }
        }
    }
    //排序后结果
    cout<<"排序前："<<endl;
    for(int i= 0;i<9;i++)
    {
        cout<<arr[i]<<" ";
    }

    cout<<endl;
    return 0;
}
